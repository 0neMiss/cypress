import type { CodegenPlugin } from '@graphql-codegen/plugin-helpers'
import { isInterfaceType, isObjectType } from 'graphql'
import path from 'path'

const plugin: CodegenPlugin<any> = {
  plugin: (schema, documents, config, info) => {
    const typesMap = schema.getTypeMap()

    let typeMap: string[] = []
    let objects: string[] = []

    for (const [typeName, type] of Object.entries(typesMap)) {
      if (!typeName.startsWith('__') && isObjectType(type) || isInterfaceType(type)) {
        if (isObjectType(type)) {
          typeMap.push(`  ${typeName}: NexusGenObjects['${typeName}'],`)
        }

        if (isObjectType(type)) {
          objects.push(typeName)
        }
      }
    }

    return [
    `// Generated by ${path.basename(__filename)}, do not edit directly`,
    `import type { NexusGenObjects, NexusGenInterfaces } from '@packages/graphql/src/gen/nxs.gen'`,
    `export interface TestSourceTypeLookup {`,
    typeMap.join('\n'),
    `}`,
    ].join('\n')
  },
}

export default plugin
