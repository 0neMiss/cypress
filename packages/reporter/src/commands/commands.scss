.reporter {
  // rendered within ../hooks/hooks.tsx
  .commands-container {
    font-family: $monospace;
    min-width: $reporter-contents-min-width;
    padding: 0;

    &:empty {
      display: none;
    }
  }

  .command {
    cursor: default;
    color: $gray-400;
    min-height: 20px;
    // margin: 0;
  }

  .command-scaled {
    font-size: 85%;
    line-height: 14px;
  }

  // System Command Styles
  .command-type-system.command-is-event {
    user-select: none;
    font-style: unset;

    .command-method,
    .command-message {
      color: $gray-200;
      font-weight: 700;
    }
  }

  // Event Styles
  .command-is-event {
    font-style: italic;

    .command-method,
    .command-message {
      color: $gray-500;
    }
  }

  // Child Styles
  .command-type-child {
    .command-method {
      &:before {
        float: left;
        content: "-";
        margin-right: 2px;
        // padding-left: 5px;
      }
    }
  }

  .command-wrapper {
    background-color: $reporter-section-background;
    color: $gray-400;
    display: flex;
    min-height: 20px;
    padding-right: 2px;
    // padding: 3px 5px 0;
    // padding: 3px 0 0;

    &:hover {
      background-color: $gray-900;

      .command-pin + .command-number {
        display: none;
      }
  
      .command-pin {
        display: block;
      }

      .command-expander > path {
        stroke: $gray-700;
      }
    }

    .command-wrapper-text {
      display: flex;
      flex-wrap: wrap;
      // padding: 2px 5px 0;
    }

    .command-interceptions {
      font-style: normal;

      .status {
        font-weight: 600;
      }
    }

    .command-alias,
    .command-interceptions {
      border-radius: 10px;
      color: $gray-400;
      padding: 0 5px;
      display: inline-block;

      &.route {
        background-color: $teal-500;
      }

      &.dom {
        background-color: $indigo-800;
      }

      &.agent,
      &.primitive {
        background-color: $red-800;
      }

      &.show-count {
        padding-right: 2px;
        border-radius: 10px 0 0 10px;
        max-width: 200px;
        white-space: nowrap;
        overflow: hidden;
        text-overflow: ellipsis;
        vertical-align: top;
        height: 18px;
      }
    }

    // ensures alias & number of children commands don't break if reporter
    // width is narrow
    .alias-container {
      white-space: nowrap;

      > {
        display: inline-block;
      }
    }

    .num-children,
    .command-alias-count,
    .command-interceptions-count {
      background-color: $orange-700 !important;
      border-radius: 5px;
      color: $gray-400;
      font-size: 90%;
      font-style: normal;
      line-height: 1;
      margin-left: 0;
    }

    .num-children.has-alias {
      border-radius: 10px;
      line-height: 1;
      padding: 3px 5px 3px 5px;
    }

    .command-alias-count,
    .command-interceptions-count {
      border-radius: 0 10px 10px 0;
      padding: 2px 5px;
    }

    .command-progress {
      height: 2px;
    }
  }

  // .command-child-container {
  //   margin-left: 10px;
  // }

  .command-number-column {
    flex-shrink: 0;
    min-height: 1px; // because some numbers are empty
    // padding-right: 10px;
    padding-top: 3px;
    text-align: right;
    width: 24px;

    .command-number {
      color: $gray-700;
    }
  }

  .command-pin-target.command-group {
    border-left: 1px dotted $gray-600;
    padding-left: 12px;

    .command-group-block {
      border-left: 1px dotted $gray-600;
      width: 12px;
      min-height: 20px;
    }
  }

  .command-info {
    display: flex;
    padding-top: 2px;
    margin-left: 0;
    overflow: hidden;
    width: 100%;

    .command-aliases,
    .command-message {
      display: flex;
      flex-grow: 2;

      .fa-circle {
        padding: 4px;
        padding-right: 2px;
        display: inline-block;
      }

      .fa-circle.command-message-indicator-successful {
        color: $jade-400;
      }

      .fa-circle.command-message-indicator-aborted {
        color: $orange-400;
      }

      .fa-circle.command-message-indicator-bad {
        color: $gray-500
      }

      .fa-circle.command-message-indicator-pending {
        color: $gray-400;
      }
    }
  }

  .command-message-text {
    display: block;
    flex-grow: 2;
    overflow: hidden;
    text-overflow: ellipsis;
  }

  .command-method {
    // padding: 1px 2px 0;
    // display: inline-block;
    font-size: 11px;
    margin-right: 12px;
    // min-width: 80px;
    font-weight: 600;
    color: $gray-200;
  }

  // Command State Styles
  .command-state-pending {
    border-left: 2px solid $indigo-800;
    background-color: $gray-900;
    cursor: default;
    color: $indigo-200;
    // padding: 2px 3px 0 8px;

    .command-number-column {
      .command-pin {
        display: none;
      }

      .fa-circle {
        line-height: 18px;
        display: inline-block;
  
        .icon-light {
          stroke: $gray-800;
        }
      }
    }

    .command-progress > span {
      animation-fill-mode: forwards;
      animation-iteration-count: 1;
      animation-name: progress-bar;
      animation-timing-function: linear;
      background: $indigo-500;
      display: block;
      float: right;
      height: 100%;
      width: 100%;
      transform-origin: right;

      @keyframes progress-bar {
        100% {
          transform: scaleX(0);
        }
      }
    }
  }

  .command-state-passed {
    // margin-left: 2px;
    border-left: 2px solid $reporter-section-background;

    &:hover {
      border-left: 2px solid $gray-900;
    }
  }

  .command-state-failed {
    border-left: 2px solid $fail;
    background-color: $err-header-background;
    color: $err-header-text;
    // padding: 2px 3px 0 0;
    // padding: 2px 3px 0 8px;

    &:hover {
      background: rgba($red-400, 0.3);
    }
  }

  .command-state-warn {
    font-style: unset;
    background-color: $warn-background;
    border-left: 2px solid $orange-700;
    padding: 2px 3px 0 8px;

    &:hover {
      background-color: $warn-header-background;
    }

    .command-method {
      color: $warn-text;
    }
  }

  .command .runnable-err-wrapper {
    padding: 0;
    border: 0;
    margin: 0;
    margin-bottom: 5px;
  }

  // Custom Styles for Specific Commands
  .command-name-assert {
    .command-method {
      span {
        border-radius: 2px;
        padding: 0 3px;
        font-size: 11px;
        display: inline-block;
        line-height: 14px;
      }
    }

    .command-message {
      color: $gray-200;

      strong {
        font-weight: 600;
        margin: 0 3px;
      }
    }

    .command-message-text {
      white-space: normal;
    }

    .command-state-pending {
      .command-method {
        color: $pending;

        span {
          background-color: $pending;
          color: $black;
        }
      }

      .command-message {
        color: $pending;

        strong {
          color: $indigo-300;
        }
      }
    }

    .command-state-failed {
      .command-method {
        color: $fail;

        span {
          background-color: $fail;
          color: $black;
        }
      }

      .command-message {
        color: $fail;

        strong {
          color: $red-300;
        }
      }
    }

    .command-state-passed {
      .command-method {
        color: $pass;

        span {
          background-color: $pass;
          color: $black;
        }
      }

      .command-message {
        color: $jade-300;

        strong {
          color: $jade-200;
        }
      }
    }
  }

  .command-pin-target {
    width: 100%;
    padding-top: 1px;
  }

  // .command-name-log,
  // .command-name-get,
  // .command-name-download {
    // we're wrapping the text, so override command-scaled
    // font-size: 100%;
    // line-height: 18px;

    .command-message-text {
      white-space: initial;
      word-wrap: break-word;
      line-height: 1.5;
      display: -webkit-box;
      -webkit-line-clamp: 50;
      -webkit-box-orient: vertical;
    }
  // }

  // Styles for Uncaught Exception
  .command-name-uncaught-exception {
    // need extra spacing between (uncaught exception) and the error message
    .command-info {
      margin-left: 5px;
    }
  }

  .command-controls {
    // display: flex;
    flex-grow: unset;
  
    svg {
      color: $gray-600;
      cursor: pointer;
      // margin: 0px 2px;
      vertical-align: top;
    }

    .command-alias,
    .command-interceptions {
      font-family: $open-sans;
      font-size: 10px;
      line-height: 1.75;
      margin-left: 5px;
    }

    label {
      font-size: 85%;
    }

    .command-invisible {
      display: inline-block;
      margin-left: 5px;
      margin-right: 0;
    }
  }

  .command-error {
    font-style: normal;
  }

  .command-pin {
    display: none;
    flex-shrink: 0;
    font-size: 14px;
    line-height: 1;
    margin-left: 10px;
    outline: none;
    padding: 2px 0 0;
    text-align: right;
    width: 15px;

    .icon-light {
      fill: $gray-800;
    }
  }

  .command-expander-column {
    flex-shrink: 0;
    padding-left: 10px;
    padding-right: 5px;
    padding-top: 3px;
    width: 25px;

    .command-expander {
      color: $gray-500;
      transform: rotate(-90deg);
      transition: transform 150ms ease-out;

      path {
        stroke: $gray-700;
      }
    }

    .command-expander-is-open {
      transform: rotate(0deg);
    }
  }

  .command-has-snapshot:hover,
  .command-has-console-props {
    cursor: pointer;
  }

  .command-is-pinned {
    background: $indigo-1000;
    border-left: 2px solid $pinned;

    &,
    &:hover {
      box-shadow: 0 1px 2px rgba($black, 0.2) inset;
    }

    &:hover {
      background: $indigo-900;
      border-left: 2px solid $pinned;
    }

    .command-pin {
      color: $pinned;
      display: block;
  
      .icon-light {
        fill: $purple-700;
      }
    }

    .command-pin + .command-number {
      display: none
    }
  }

  // rendered within ../attempts/attempts.tsx
  .no-commands {
    background-color: $gray-1000;
    border: 1px solid $gray-900;
    border-radius: 3px;
    box-shadow: inset 0 1px 1px rgba($white, 0.05);
    min-height: 20px;
    padding: 9px;
  }

  // additional styles on top of the shared.scss styles
  .num-children {
    color: $black;
    display: inline-block;
    background-color: $gray-500;
  }

  // additional styles on top of the shared.scss styles
  .num-elements {
    background-color: $gray-600;
    display: inline-block;
    color: $black;
    vertical-align: text-top;
  }

  // utilizing element size queries: https://github.com/marcj/css-element-queries
  // styles take effect when width is greater than or equal to the specified amount
  &[min-width~="300px"] {
    .command-wrapper-text {
      flex-wrap: nowrap;
    }
  }
}
