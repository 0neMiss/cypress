### This file was generated by Nexus Schema
### Do not make changes to this file directly


type App {
  """The current version of the cypress runner"""
  cypressVersion: String
  experiments: [Experiment]
  field: String

  """This is an app with a name"""
  name: String
  options: AppOptions
  recentProjects: [Project]
}

type AppOptions {
  cypressEnv: String
  os: String
  projectRoot: String
  proxyBypassList: String
  proxyServer: String
  proxySource: String
}

type Browser implements Node {
  id: ID
  state: browserState
}

enum CurrentStep {
  installDependencies
  selectFramework
}

type Dashboard {
  """Auto-generated by nexus-decorators as the objectType is missing fields"""
  todo: Boolean
}

"""
A date-time string at UTC, such as 2007-12-03T10:15:30Z, compliant with the `date-time` format outlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for representation of dates and times using the Gregorian calendar.
"""
scalar DateTime

"""A feature flag that can be enabled"""
type Experiment {
  name: String
}

type File implements Node {
  id: ID
}

"""A folder"""
type Folder {
  displayName: String
  hasChildren: Boolean
  path: String
  specType: SpecType
}

"""
The `JSON` scalar type represents JSON values as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf).
"""
scalar JSON @specifiedBy(url: "http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf")

type Mutation {
  """
  When we add a project, either by dragging or selecting. Adds the project & selects it
  """
  addProject: Query
  closeBrowser: Query
  closeProject: Query
  externalOpen(params: JSON = "{}", url: String!): Boolean
  logOut: Query

  """Removes a local project from the recentProjects list"""
  removeProject(
    """The ID of the project we are removing"""
    id: ID!
  ): App

  """When we select the active project"""
  selectProject(id: ID!): Query
  setScaffoldPaths: ProjectConfig
  wizardSetComponentFramework: Query
  wizardSetDismissedHelper: Wizard
  wizardSetTestingType(type: String): Query
}

interface Node {
  id: ID
}

type Organization {
  name: String
}

"""A project is a directory with a cypress.json file"""
type Project implements Node {
  absolutePath: String!
  browserState: browserState
  browsers: [Browser]
  displayName: String
  displayPath: String
  id: ID

  """Folder containing the integration tests"""
  integrationFolder: String
  name: String
  organization: Organization
  relativePath: String!
  sortedSpecsList: [File]
}

"""All configuration for a project"""
type ProjectConfig {
  """Auto-generated by nexus-decorators as the objectType is missing fields"""
  todo: Boolean
}

type Query {
  app: App!

  """The active project for the application, if any"""
  currentProject: Project

  """All projects we know about on the machine"""
  recentProjects: [Project]

  """Returns metadata associated with the onboarding wizard"""
  wizard: Wizard
}

"""A release of the test runner"""
type Release {
  """Auto-generated by nexus-decorators as the objectType is missing fields"""
  todo: Boolean
}

enum SpecType {
  component
  integration
}

type User {
  displayName: String
  email: String
  name: String
}

"""Groups all actions & data associated with the onboarding wizard"""
type Wizard {
  """Whether we can go to the previous step in the onboarding flow"""
  canGoBackStep: Boolean

  """Whether we can go to the next step in the onboarding flow"""
  canGoNextStep: Boolean
  currentStep: CurrentStep
  dependenciesToInstall: [WizardDependency]
  packageManager: String
  showNewUserWelcome: Boolean
}

type WizardDependency {
  description: String
  packageName: String
}

enum browserState {
  closed
  opened
  opening
}
