### This file was generated by Nexus Schema
### Do not make changes to this file directly


type App {
  """The current version of the cypress runner"""
  cypressVersion: String
  field: String

  """This is an app with a name"""
  name: String
  options: AppOptions
  recentProjects: [Project]
}

type AppOptions {
  cypressEnv: String
  os: String
  projectRoot: String
  proxyBypassList: String
  proxyServer: String
  proxySource: String
  todo: ID
}

type Browser {
  todo: ID
}

enum CurrentStep {
  installDependencies
  selectFramework
}

type Dashboard {
  todo: ID
}

"""A feature flag that can be enabled"""
type Experiment {
  todo: ID
}

type File implements Node {
  id: ID
  todo: ID
}

"""A folder"""
type Folder {
  displayName: String
  hasChildren: Boolean
  path: String
  specType: SpecType
}

type Mutation {
  addProject: Query
  closeBrowser: Query
  closeProject: Query
  externalOpen: Boolean
  logOut: Query
  removeProject: Query
  setScaffoldPaths: ProjectConfig
  wizardSetComponentFramework: Query
  wizardSetDismissedHelper: Wizard
  wizardSetTestingType(type: String): Query
}

interface Node {
  id: ID
}

type Organization {
  name: String
  todo: ID
}

"""A project is a directory with a cypress.json file"""
type Project {
  name: String
  organization: Organization
  sortedSpecsList: [File]
}

"""All configuration for a project"""
type ProjectConfig {
  todo: ID
}

type Query {
  app: App!
  currentProject: Project
  projects: [Project]
  wizard: Wizard
}

"""A release of the test runner"""
type Release {
  todo: ID
}

enum SpecType {
  component
  integration
}

type User {
  displayName: String
  email: String
  name: String
}

"""Groups all actions & data associated with the onboarding wizard"""
type Wizard {
  """Whether we can go to the previous step in the onboarding flow"""
  canGoBackStep: Boolean

  """Whether we can go to the next step in the onboarding flow"""
  canGoNextStep: Boolean
  currentStep: CurrentStep
  dependenciesToInstall: [WizardDependency]
  packageManager: String
  showNewUserWelcome: Boolean
}

type WizardDependency {
  description: String
  packageName: String
}
